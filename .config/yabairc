#!/usr/bin/env sh


yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"
yabai -m signal --add event=window_focused action="sketchybar --trigger window_focus"
sudo yabai --load-sa

# Tiling options
# Layouts
yabai -m config layout                       bsp
# Padding and gaps
yabai -m config top_padding                  40
yabai -m config bottom_padding               12
yabai -m config left_padding                 12
yabai -m config right_padding                12
# NOTE: for OBS floating head
yabai -m config window_gap                   12
# Split ratios
yabai -m config auto_balance                 off
yabai -m config split_ratio                  0.50

# Mouse
yabai -m config mouse_modifier               fn
yabai -m config mouse_action1                move
yabai -m config mouse_action2                resize
# yabai -m config mouse_drop_action            swap
yabai -m config mouse_follows_focus          off
yabai -m config focus_follows_mouse          off

# Window modifications
# modify window shadows (default: on, options: on, off, float)
# example: show shadows only for floating windows
yabai -m config window_shadow float

# window opacity (default: off)
# example: render all unfocused windows with 90% opacityâ€¦
yabai -m config window_opacity               on
yabai -m config active_window_opacity        1.0
yabai -m config normal_window_opacity        0.95
yabai -m config window_opacity_duration      0.0
yabai -m config window_animation_duration    0.0     
yabai -m config window_animation_easing      ease_out_circ
yabai -m config window_shadow                on 
yabai -m config window_zoom_persist          on
yabai -m config window_insertion_point       focused

# yabai -m config external_bar main:20:0

# apps to not manage (ignore)
# TO GET TITLE: 
# $ yabai -m query --windows --window | jq '.title'
# $ yabai -m query --windows --window | jq '.app'
yabai -m rule --add app="^System Settings$" manage=off
yabai -m rule --add app="^Archive Utility$" manage=off
yabai -m rule --add app="^AmpliTube 5$" manage=off
yabai -m rule --add app="^Creative Cloud$" manage=off
yabai -m rule --add app="^Logi Options$" manage=off
yabai -m rule --add app="^Simulator$" manage=off
yabai -m rule --add app="^qemu-system-aarch64$" manage=off
yabai -m rule --add app="^android-emulator$" manage=off

borders active_color=0xfff38ba8 inactive_color=0xff414550 width=5.0 &

echo "yabai configuration loaded.."



#
# setup spaces
#
# for _ in $(yabai -m query --spaces | jq '.[].index | select(. > 6)'); do
#   yabai -m space --destroy 7
# done

# function setup_space {
#   local idx="$1"m
#   local name="$2"
#   local space=
#   echo "setup space $idx : $name"

#   space=$(yabai -m query --spaces --space "$idx")
#   if [ -z "$space" ]; then
#     yabai -m space --create
#   fi

#   yabai -m space "$idx" --label "$name"
# }

# setup_space 1 emacs
# setup_space 2 code
# setup_space 3 web
# setup_space 4 social
# setup_space 5 media
# setup_space 6 other

# move some apps automatically to specific spaces
yabai -m rule --add app="^Safari$" display=^2
yabai -m rule --add app="^Firefox$" space=^3
# yabai -m rule --add app="^Telegram$" space=4
yabai -m rule --add app="^Google Chrome$" space=9
yabai -m rule --add app="^Spotify$" space=5

# view the last lines of the error log 
# tail -f /tmp/yabai_$USER.err.log
